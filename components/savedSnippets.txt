  return (
    <PreJoinContainer>
      <HeadContainer>
        <h1>Ready for meeting?</h1>
        <p>with <b>SeniWave</b>, it will last about 30 minutes</p>
      </HeadContainer>
      <VideoContainer>
        {videoEnabled && videoTrack ? (
          <video
            ref={videoRef}
            autoPlay
            muted
            playsInline
            data-facing-mode={facingMode}
          />
        ) : (
          <CameraOffMessage>
            <p>Camera is off</p>
          </CameraOffMessage>
        )}
      </VideoContainer>

      <FormContainer onSubmit={handleSubmit}>
        <InputGroup>
          <label htmlFor="username">
            {userLabel}
          </label>
          <input
            id="username"
            type="text"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            placeholder="Enter your name"
            required
          />
        </InputGroup>

        <JoinButton
          type="submit"
          disabled={isLoading || !username.trim()}
        >
          <span>{joinLabel}</span>
        </JoinButton>

        <MediaButtonsGroup>
          <MediaInputButton
            type="button"
            onClick={() => setAudioEnabled(!audioEnabled)}
            disabled={isLoading}
            isActive={audioEnabled}
          >
            {audioEnabled ? 'ðŸ”Š' : 'ðŸ”‡'} {micLabel}
          </MediaInputButton>

          <MediaInputButton
            type="button"
            onClick={() => setVideoEnabled(!videoEnabled)}
            disabled={isLoading}
            isActive={videoEnabled}
          >
            {videoEnabled ? 'ðŸŽ¥' : 'ðŸ“µ'} {camLabel}
          </MediaInputButton>
        </MediaButtonsGroup>
      </FormContainer>
    </PreJoinContainer>
  );






          <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
          <div style={{ display: 'flex', flexDirection: 'row', gap: '1rem' }}>
            <input
              id="use-e2ee"
              type="checkbox"
              checked={e2ee}
              onChange={(ev) => setE2ee(ev.target.checked)}
            ></input>
            <label htmlFor="use-e2ee">Enable end-to-end encryption</label>
          </div>
          {e2ee && (
            <div style={{ display: 'flex', flexDirection: 'row', gap: '1rem' }}>
              <label htmlFor="passphrase">Passphrase</label>
              <input
                id="passphrase"
                type="password"
                value={sharedPassphrase}
                onChange={(ev) => setSharedPassphrase(ev.target.value)}
              />
            </div>
          )}
        </div>